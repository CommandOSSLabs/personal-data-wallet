version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=personal_data_wallet
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - SUI_NETWORK=devnet
      - SUI_PACKAGE_ID=${SUI_PACKAGE_ID}
      - SUI_ADMIN_PRIVATE_KEY=${SUI_ADMIN_PRIVATE_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - WALRUS_API_KEY=${WALRUS_API_KEY}
      - WALRUS_API_URL=${WALRUS_API_URL}
      - SEAL_MASTER_KEY=${SEAL_MASTER_KEY}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=personal_data_wallet
      - DB_SYNC=true
      - DB_LOGGING=true
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - sui-node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3000
      - NEXT_PUBLIC_BACKEND_URL=http://backend:3000
    depends_on:
      - backend
    volumes:
      - ./app:/app/app
      - ./public:/app/public
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data: