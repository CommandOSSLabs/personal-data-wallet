{
  "id": {
    "address": "std",
    "name": "type_name"
  },
  "doc": " Functionality for converting Move types into values. Use with care!",
  "immediate_dependencies": [
    {
      "address": "std",
      "name": "address"
    },
    {
      "address": "std",
      "name": "ascii"
    }
  ],
  "attributes": [],
  "functions": {
    "with_defining_ids": {
      "source_index": 0,
      "index": 0,
      "doc": " Return a value representation of the type `T`. Package IDs that appear in fully qualified type\n names in the output from this function are defining IDs (the ID of the package in storage that\n first introduced the type).",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "type_name"
            },
            "name": "TypeName",
            "type_arguments": []
          }
        }
      ]
    },
    "with_original_ids": {
      "source_index": 1,
      "index": 1,
      "doc": " Return a value representation of the type `T`. Package IDs that appear in fully qualified type\n names in the output from this function are original IDs (the ID of the first version of\n the package, even if the type in question was introduced in a later upgrade).",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "type_name"
            },
            "name": "TypeName",
            "type_arguments": []
          }
        }
      ]
    },
    "defining_id": {
      "source_index": 2,
      "index": 2,
      "doc": " Like `with_defining_ids`, this accesses the package ID that original defined the type `T`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        "address"
      ]
    },
    "original_id": {
      "source_index": 3,
      "index": 3,
      "doc": " Like `with_original_ids`, this accesses the original ID of the package that defines type `T`,\n even if the type was introduced in a later version of the package.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        "address"
      ]
    },
    "is_primitive": {
      "source_index": 4,
      "index": 4,
      "doc": " Returns true iff the TypeName represents a primitive type, i.e. one of\n u8, u16, u32, u64, u128, u256, bool, address, vector.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "as_string": {
      "source_index": 5,
      "index": 5,
      "doc": " Get the String representation of `self`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "ascii"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "address_string": {
      "source_index": 6,
      "index": 6,
      "doc": " Get Address string (Base16 encoded), first part of the TypeName.\n Aborts if given a primitive type.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "ascii"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "module_string": {
      "source_index": 7,
      "index": 7,
      "doc": " Get name of the module.\n Aborts if given a primitive type.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "ascii"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "into_string": {
      "source_index": 8,
      "index": 8,
      "doc": " Convert `self` into its inner String",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "type_name"
              },
              "name": "TypeName",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "ascii"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "get": {
      "source_index": 9,
      "index": 9,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Renamed to `with_defining_ids` for clarity."
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "type_name"
            },
            "name": "TypeName",
            "type_arguments": []
          }
        }
      ]
    },
    "get_with_original_ids": {
      "source_index": 10,
      "index": 10,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Renamed to `with_original_ids` for clarity."
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "type_name"
            },
            "name": "TypeName",
            "type_arguments": []
          }
        }
      ]
    },
    "borrow_string": {
      "source_index": 11,
      "index": 11,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Renamed to `as_string` for consistency."
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "ascii"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_address": {
      "source_index": 12,
      "index": 12,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Renamed to `address_string` for consistency."
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "ascii"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "get_module": {
      "source_index": 13,
      "index": 13,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Renamed to `module_string` for consistency."
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "ascii"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    }
  },
  "structs": {
    "TypeName": {
      "index": 0,
      "doc": null,
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "name": {
            "index": 0,
            "doc": " String representation of the type. All types are represented\n using their source syntax:\n \"u8\", \"u64\", \"bool\", \"address\", \"vector\", and so on for primitive types.\n Struct types are represented as fully qualified type names; e.g.\n `00000000000000000000000000000001::string::String` or\n `0000000000000000000000000000000a::module_name1::type_name1<0000000000000000000000000000000a::module_name2::type_name2<u64>>`\n Addresses are hex-encoded lowercase values of length ADDRESS_LENGTH (16, 20, or 32 depending on the Move platform)",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "ascii"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          }
        }
      }
    }
  },
  "enums": {}
}