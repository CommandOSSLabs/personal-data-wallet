# =============================================================================
# PDW Chat Demo Backend Configuration
# =============================================================================

# Server Configuration
PORT=4000
NODE_ENV=development

# Database Configuration
DATABASE_URL=postgres://postgres:postgres@localhost:5432/pdw_chat_demo
# DATABASE_SSL=false  # Set to true for production/cloud databases

# Sui Blockchain Configuration
SUI_RPC_URL=https://fullnode.testnet.sui.io:443

# Personal Data Wallet (PDW) Configuration
PDW_PACKAGE_ID=0xa1b4bf8b2fe86b5de5aadc0e60690f0352081ec53e8754d40cc24a27a3e3a9bd
PDW_ACCESS_REGISTRY_ID=0x6d006a5a8d094cc8f92fa17ea48495ad5d5e4f775a4f5c063df1413c2ff2f2ca
# PDW_API_URL=http://localhost:4000/pdw  # Auto-configured if not set
# PDW_CONTEXT_APP_ID=pdw-chat-demo  # Auto-configured if not set
# PDW_CONSENT_STORAGE_PATH=./storage/consents/requests.json  # Auto-configured if not set

# Walrus Storage Configuration
WALRUS_UPLOAD_RELAY=https://upload-relay.testnet.walrus.space
WALRUS_STORAGE_EPOCHS=3
WALRUS_STORAGE_TIMEOUT=60000

# SEAL Encryption Configuration
SEAL_KEY_SERVER_IDS=0x73d05d62c18d9374e3ea529e8e0ed6161da1a141a94d3f76ae3fe4e99356db75,0xf5d14a81a982144ae441cd7d64b09027f116a468bd36e7eca494f750591623c8
SEAL_PACKAGE_ID=0xa1b4bf8b2fe86b5de5aadc0e60690f0352081ec53e8754d40cc24a27a3e3a9bd
SEAL_MODULE_NAME=seal_access_control

# Google Gemini AI Configuration
GEMINI_API_KEY=AIzaSyBUmLkn4M7ZfZvZIRHAx7yGv2K63MDpPaI
GEMINI_MODEL=gemini-2.5-flash
GEMINI_EMBEDDING_MODEL=text-embedding-004

# Logging and Debugging
LOG_LEVEL=debug

# Optional: Skip certain operations for development/testing
# SKIP_BLOCKCHAIN_OPERATIONS=false
# SKIP_ENCRYPTION=false

# =============================================================================
# Production Environment Variables (for Railway/Cloud deployment)
# =============================================================================
# The following variables are typically set by your cloud provider:
#
# PORT=4000  # Usually auto-set by platform
# NODE_ENV=production
# DATABASE_URL=postgresql://user:pass@host:port/db  # Provided by database service
# DATABASE_SSL=true  # Usually required for cloud databases
# PDW_API_URL=https://your-backend-url.com/pdw
# PDW_CONSENT_STORAGE_PATH=/app/storage/consents/requests.json

# =============================================================================
# Docker Compose Override Variables
# =============================================================================
# When using docker-compose, create a .env file with these values:
#
# POSTGRES_PASSWORD=your_secure_password
# POSTGRES_DB=pdw_chat_demo
# POSTGRES_USER=postgres

# =============================================================================
# Test Configuration (optional)
# =============================================================================
# Uncomment and configure for testing:
# TEST_USER_ADDRESS=0xc5e67f46e1b99b580da3a6cc69acf187d0c08dbe568f8f5a78959079c9d82a15
# TEST_PRIVATE_KEY=suiprivkey1...

# =============================================================================
# Getting Started Instructions
# =============================================================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Update GEMINI_API_KEY with your actual API key
# 3. Update PDW_* variables with your deployed package IDs
# 4. For local development, you can use the default DATABASE_URL
# 5. For production, ensure all required variables are set in your platform
