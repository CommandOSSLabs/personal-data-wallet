# syntax=docker/dockerfile:1

# Standalone PDW Chat Demo Dockerfile
# This version bundles all dependencies locally without requiring parent SDK

ARG CACHE_BUST=2025-01-06-v1-STANDALONE

FROM node:20 AS sdk-builder

WORKDIR /app

# Copy the SDK source code to build it locally
COPY sdk-bundle ./sdk-bundle

# Install Python and build tools for native dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Build the bundled SDK
WORKDIR /app/sdk-bundle
RUN npm ci --include=dev
RUN npm run build

FROM node:20 AS backend-builder

WORKDIR /app

# Copy backend source
COPY backend ./backend
COPY sdk-bundle ./sdk-bundle

# Install Python and build tools for backend dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Install backend dependencies
WORKDIR /app/backend
RUN npm ci --include=dev

# Build backend
RUN npm run build
RUN npm prune --omit=dev

FROM node:20-slim AS runner

ENV NODE_ENV=production

WORKDIR /app

# Create necessary directories with proper permissions
RUN mkdir -p /app/storage/consents && \
    chmod -R 755 /app/storage

# Copy built backend and dependencies
COPY --from=backend-builder /app/backend/dist ./dist
COPY --from=backend-builder /app/backend/node_modules ./node_modules
COPY --from=backend-builder /app/backend/package.json ./package.json
COPY --from=backend-builder /app/backend/docker-entrypoint.sh ./docker-entrypoint.sh

# Copy SDK bundle
COPY --from=sdk-builder /app/sdk-bundle ./sdk-bundle

# Copy migration files
COPY --from=backend-builder /app/backend/src/db/migrations ./src/db/migrations

# Make entrypoint executable
RUN chmod +x ./docker-entrypoint.sh

# Create non-root user for security
RUN groupadd -r pdwuser && useradd -r -g pdwuser pdwuser && \
    chown -R pdwuser:pdwuser /app/storage

# Switch to non-root user
USER pdwuser

EXPOSE 4000

CMD ["./docker-entrypoint.sh"]