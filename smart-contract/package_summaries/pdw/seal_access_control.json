{
  "id": {
    "address": "pdw",
    "name": "seal_access_control"
  },
  "doc": null,
  "immediate_dependencies": [
    {
      "address": "std",
      "name": "option"
    },
    {
      "address": "std",
      "name": "string"
    },
    {
      "address": "std",
      "name": "vector"
    },
    {
      "address": "sui",
      "name": "address"
    },
    {
      "address": "sui",
      "name": "clock"
    },
    {
      "address": "sui",
      "name": "event"
    },
    {
      "address": "sui",
      "name": "object"
    },
    {
      "address": "sui",
      "name": "table"
    },
    {
      "address": "sui",
      "name": "transfer"
    },
    {
      "address": "sui",
      "name": "tx_context"
    }
  ],
  "attributes": [],
  "functions": {
    "init": {
      "source_index": 0,
      "index": 0,
      "doc": " Initialize the access control registry\n Called automatically on package publication\n Emits RegistryCreated event for tracking",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "seal_approve": {
      "source_index": 1,
      "index": 1,
      "doc": " SEAL-compliant access approval function with cross-context support\n Must be entry function that aborts on access denial (per SEAL requirements)\n \n Flow:\n 1. User owns all data (verified via tx_context::sender)\n 2. Apps can access their own context without permission\n 3. Apps need explicit permission to access other contexts\n \n @param id: Content identifier (SEAL key ID)\n @param requesting_app_id: App requesting access (must match actual calling app)\n @param registry: Access control registry\n @param clock: Clock for timestamp validation\n @param ctx: Transaction context",
      "attributes": [],
      "visibility": "Private",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "id",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "requesting_wallet",
          "type_": "address"
        },
        {
          "name": "registry",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "register_content": {
      "source_index": 2,
      "index": 2,
      "doc": " Register encrypted content with an owner\n Emits ContentRegistered event for tracking\n \n @param registry: Mutable reference to the shared AccessRegistry\n @param content_id: Unique identifier for the content being registered\n @param clock: Reference to the global clock for timestamp\n @param ctx: Transaction context",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "register_content_v2": {
      "source_index": 3,
      "index": 3,
      "doc": " Register encrypted content against a context wallet address",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "context_wallet",
          "type_": "address"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "register_context": {
      "source_index": 4,
      "index": 4,
      "doc": " Register a context wallet for an app\n Called when an app creates a context wallet for a user\n \n @param registry: Mutable reference to the shared AccessRegistry\n @param context_id: Unique identifier for the context (derived from MainWallet)\n @param app_id: Application identifier\n @param clock: Reference to the global clock for timestamp\n @param ctx: Transaction context",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "context_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "app_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "register_context_wallet": {
      "source_index": 5,
      "index": 5,
      "doc": " Register a hierarchical context wallet that is derived from the main wallet",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "context_wallet",
          "type_": "address"
        },
        {
          "name": "derivation_index",
          "type_": "u64"
        },
        {
          "name": "app_hint",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "grant_access": {
      "source_index": 6,
      "index": 6,
      "doc": " Grant access to another user",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "recipient",
          "type_": "address"
        },
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "access_level",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "expires_at",
          "type_": "u64"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "revoke_access": {
      "source_index": 7,
      "index": 7,
      "doc": " Revoke access from a user",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "recipient",
          "type_": "address"
        },
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "grant_cross_context_access": {
      "source_index": 8,
      "index": 8,
      "doc": " Grant cross-context access: Allow requesting_app to access source_context data\n User must own the source context\n \n Example: User grants Social App permission to read Medical App context\n \n @param registry: Mutable reference to the shared AccessRegistry\n @param requesting_app_id: App that will access the data\n @param source_context_id: Context being accessed\n @param access_level: \"read\" or \"write\"\n @param expires_at: Expiration timestamp in milliseconds\n @param clock: Reference to the global clock\n @param ctx: Transaction context",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "requesting_app_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "source_context_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "access_level",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "expires_at",
          "type_": "u64"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "revoke_cross_context_access": {
      "source_index": 9,
      "index": 9,
      "doc": " Revoke cross-context access from an app\n \n @param registry: Mutable reference to the shared AccessRegistry\n @param requesting_app_id: App to revoke access from\n @param source_context_id: Context to revoke access to\n @param ctx: Transaction context",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "requesting_app_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "source_context_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "grant_wallet_allowlist_access": {
      "source_index": 10,
      "index": 10,
      "doc": " Grant wallet-based allowlist access between two context wallets",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "requester_wallet",
          "type_": "address"
        },
        {
          "name": "target_wallet",
          "type_": "address"
        },
        {
          "name": "scope",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "access_level",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "expires_at",
          "type_": "u64"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "revoke_wallet_allowlist_access": {
      "source_index": 11,
      "index": 11,
      "doc": " Revoke wallet-based allowlist access",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "requester_wallet",
          "type_": "address"
        },
        {
          "name": "target_wallet",
          "type_": "address"
        },
        {
          "name": "scope",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "check_access": {
      "source_index": 12,
      "index": 12,
      "doc": " Check if a user has access (for off-chain queries)",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "user",
          "type_": "address"
        },
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "get_permission": {
      "source_index": 13,
      "index": 13,
      "doc": " Get permission details",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "user",
          "type_": "address"
        },
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        },
        "u64",
        "u64"
      ]
    },
    "log_access": {
      "source_index": 14,
      "index": 14,
      "doc": " Log access attempt (can be called by Seal integration)",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "access_type",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "success",
          "type_": "bool"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "cleanup_expired_permission": {
      "source_index": 15,
      "index": 15,
      "doc": " Clean up expired permissions for a specific content_id and user\n This is a maintenance function that can be called by anyone",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "user",
          "type_": "address"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "default_read_scope": {
      "source_index": 16,
      "index": 16,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "default_write_scope": {
      "source_index": 17,
      "index": 17,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "clone_string": {
      "source_index": 18,
      "index": 18,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "value",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "wallet_to_string": {
      "source_index": 19,
      "index": 19,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "wallet",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "has_active_wallet_allowlist": {
      "source_index": 20,
      "index": 20,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "requesting_wallet",
          "type_": "address"
        },
        {
          "name": "target_wallet",
          "type_": "address"
        },
        {
          "name": "scope",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "has_legacy_context_permission": {
      "source_index": 21,
      "index": 21,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "registry",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "pdw",
                    "name": "seal_access_control"
                  },
                  "name": "AccessRegistry",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "context_id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "app_id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "sui",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "clone_option_string": {
      "source_index": 22,
      "index": 22,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "opt",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "option"
                  },
                  "name": "Option",
                  "type_arguments": [
                    {
                      "phantom": false,
                      "argument": {
                        "Datatype": {
                          "module": {
                            "address": "std",
                            "name": "string"
                          },
                          "name": "String",
                          "type_arguments": []
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "phantom": false,
                "argument": {
                  "Datatype": {
                    "module": {
                      "address": "std",
                      "name": "string"
                    },
                    "name": "String",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ]
    },
    "build_permission_key": {
      "source_index": 23,
      "index": 23,
      "doc": " Build a unique key for permission storage\n Combines content_id bytes with user address bytes to create a unique identifier\n \n @param content_id: The content identifier\n @param user: The user's address\n @return: A unique byte vector for this content-user combination",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "content_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "std",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "user",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "build_wallet_allowlist_key": {
      "source_index": 24,
      "index": 24,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "requesting_wallet",
          "type_": "address"
        },
        {
          "name": "target_wallet",
          "type_": "address"
        },
        {
          "name": "scope",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "build_context_permission_key": {
      "source_index": 25,
      "index": 25,
      "doc": " Build a unique key for context permission storage\n Combines context_id with app_id to create composite key\n \n @param context_id: The context identifier\n @param app_id: The application identifier\n @return: A unique byte vector for this context-app combination",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "context_id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "app_id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "extract_context_id": {
      "source_index": 26,
      "index": 26,
      "doc": " Extract context_id from content_id\n Format: \"context_id:content_suffix\" -> \"context_id\"\n \n @param content_id: Full content identifier\n @return: Context portion of the identifier",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "content_id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "std",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "bytes_to_hex_string": {
      "source_index": 27,
      "index": 27,
      "doc": " Convert bytes to hex string with 0x prefix\n Used for SEAL ID parsing\n \n @param bytes: Raw bytes to convert\n @return: Hex string representation with 0x prefix",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bytes",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "std",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    }
  },
  "structs": {
    "RegistryCreated": {
      "index": 0,
      "doc": " Event emitted when the access registry is created",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "registry_id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "creator": {
            "index": 1,
            "doc": null,
            "type_": "address"
          }
        }
      }
    },
    "ContentRegistered": {
      "index": 1,
      "doc": " Event emitted when content is registered",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "content_id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "owner": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "timestamp": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "AccessChanged": {
      "index": 2,
      "doc": " Event emitted when access is granted or revoked",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "content_id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "recipient": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "access_level": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "granted": {
            "index": 3,
            "doc": null,
            "type_": "bool"
          },
          "expires_at": {
            "index": 4,
            "doc": null,
            "type_": "u64"
          },
          "granted_by": {
            "index": 5,
            "doc": null,
            "type_": "address"
          }
        }
      }
    },
    "ContextRegistered": {
      "index": 3,
      "doc": " Event emitted when context is registered",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "context_id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "app_id": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "owner": {
            "index": 2,
            "doc": null,
            "type_": "address"
          },
          "timestamp": {
            "index": 3,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "CrossContextAccessChanged": {
      "index": 4,
      "doc": " Event emitted when cross-context access is granted or revoked",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "source_context_id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "requesting_app_id": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "access_level": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "granted": {
            "index": 3,
            "doc": null,
            "type_": "bool"
          },
          "expires_at": {
            "index": 4,
            "doc": null,
            "type_": "u64"
          },
          "granted_by": {
            "index": 5,
            "doc": null,
            "type_": "address"
          }
        }
      }
    },
    "ContextWalletRegistered": {
      "index": 5,
      "doc": " Event emitted when a hierarchical context wallet is registered",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "main_wallet": {
            "index": 0,
            "doc": null,
            "type_": "address"
          },
          "context_wallet": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "derivation_index": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "scope_hint": {
            "index": 3,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "phantom": false,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "std",
                          "name": "string"
                        },
                        "name": "String",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          },
          "timestamp": {
            "index": 4,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "WalletAllowlistChanged": {
      "index": 6,
      "doc": " Event emitted when wallet allowlist grants or revocations occur",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "requester_wallet": {
            "index": 0,
            "doc": null,
            "type_": "address"
          },
          "target_wallet": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "scope": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "access_level": {
            "index": 3,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "granted": {
            "index": 4,
            "doc": null,
            "type_": "bool"
          },
          "expires_at": {
            "index": 5,
            "doc": null,
            "type_": "u64"
          },
          "granted_by": {
            "index": 6,
            "doc": null,
            "type_": "address"
          }
        }
      }
    },
    "AccessRegistry": {
      "index": 7,
      "doc": " Access control registry for managing permissions",
      "attributes": [],
      "abilities": [
        "Key"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "owners": {
            "index": 1,
            "doc": " Maps content_id -> owner address",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "std",
                          "name": "string"
                        },
                        "name": "String",
                        "type_arguments": []
                      }
                    }
                  },
                  {
                    "phantom": true,
                    "argument": "address"
                  }
                ]
              }
            }
          },
          "permissions": {
            "index": 2,
            "doc": " Maps (content_id, user_address) -> AccessPermission",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": {
                      "vector": "u8"
                    }
                  },
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "pdw",
                          "name": "seal_access_control"
                        },
                        "name": "AccessPermission",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          },
          "context_owners": {
            "index": 3,
            "doc": " Maps context_id -> owner address (for context-level ownership)",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "std",
                          "name": "string"
                        },
                        "name": "String",
                        "type_arguments": []
                      }
                    }
                  },
                  {
                    "phantom": true,
                    "argument": "address"
                  }
                ]
              }
            }
          },
          "context_permissions": {
            "index": 4,
            "doc": " Maps (context_id, app_id) -> AccessPermission (for cross-context access)",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": {
                      "vector": "u8"
                    }
                  },
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "pdw",
                          "name": "seal_access_control"
                        },
                        "name": "AccessPermission",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          },
          "context_wallets": {
            "index": 5,
            "doc": " Maps context wallet address -> metadata",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": "address"
                  },
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "pdw",
                          "name": "seal_access_control"
                        },
                        "name": "ContextWalletInfo",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          },
          "content_contexts": {
            "index": 6,
            "doc": " Maps content_id -> context wallet address (wallet-based contexts)",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "std",
                          "name": "string"
                        },
                        "name": "String",
                        "type_arguments": []
                      }
                    }
                  },
                  {
                    "phantom": true,
                    "argument": "address"
                  }
                ]
              }
            }
          },
          "wallet_allowlist": {
            "index": 7,
            "doc": " Maps (requester_wallet, target_wallet, scope) -> WalletAllowlistEntry",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "phantom": true,
                    "argument": {
                      "vector": "u8"
                    }
                  },
                  {
                    "phantom": true,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "pdw",
                          "name": "seal_access_control"
                        },
                        "name": "WalletAllowlistEntry",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "AccessPermission": {
      "index": 8,
      "doc": " Individual access permission",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "access_level": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "granted_at": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          },
          "expires_at": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "granted_by": {
            "index": 3,
            "doc": null,
            "type_": "address"
          }
        }
      }
    },
    "ContextWalletInfo": {
      "index": 9,
      "doc": " Information about a derived context wallet owned by a main wallet",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "main_wallet": {
            "index": 0,
            "doc": null,
            "type_": "address"
          },
          "derivation_index": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          },
          "registered_at": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "app_hint": {
            "index": 3,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "phantom": false,
                    "argument": {
                      "Datatype": {
                        "module": {
                          "address": "std",
                          "name": "string"
                        },
                        "name": "String",
                        "type_arguments": []
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "WalletAllowlistEntry": {
      "index": 10,
      "doc": " Allowlist entry granting wallet-based access to a context wallet",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "scope": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "access_level": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "granted_at": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "expires_at": {
            "index": 3,
            "doc": null,
            "type_": "u64"
          },
          "granted_by": {
            "index": 4,
            "doc": null,
            "type_": "address"
          }
        }
      }
    },
    "AccessLog": {
      "index": 11,
      "doc": " Access log entry for audit trail",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "sui",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "content_id": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "requester": {
            "index": 2,
            "doc": null,
            "type_": "address"
          },
          "access_type": {
            "index": 3,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "std",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "timestamp": {
            "index": 4,
            "doc": null,
            "type_": "u64"
          },
          "success": {
            "index": 5,
            "doc": null,
            "type_": "bool"
          }
        }
      }
    }
  },
  "enums": {}
}